# Global requirements
jxRequirements:
  envName: default
  ingress:
    domain: svc.cluster.local
    externalDNS: true
    namespaceSubDomain: .default.
    serviceType: ClusterIP
    tls:
      email: cicd@liquidx.com
      enabled: true
      production: true
      secretName: ""

# Horizontally scale the application
replicaCount: 1

# Modify metadata for different resources
metadata:
  deployment: {}
  service: {}
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/limit-rpm: "600"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "Content-Security-Policy: default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';";
        more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
        more_set_headers "Feature-Policy: camera 'none'; microphone 'none'; geolocation 'none'; encrypted-media 'none'; payment 'none'; speaker 'none'; usb 'none';";

# Image configuration
image:
  repository: draft
  tag: dev
  pullPolicy: IfNotPresent
  imagePullSecrets:
  - name: tekton-container-registry-auth

# Define resources for the container
resources:
  default:
    limits:
      cpu: 2000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

# Provide custom env here
env:
  default:
  - name: LQX_CONFIG_PATH
    value: /etc/disty-shared/config;./config
  - name: DD_AGENT_SERVICE_HOST
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: status.hostIP
  - name: DD_AGENT_SERVICE_PORT
    value: '8126'

# Configuration for the service resource
service:
  enabled: true
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http

# Fill this section if deploying a custom certificate
tls:
  certificate:
    enabled: false
    issuerName: ""
    issuerKind: ""

# Config for ingress
ingress:
  enabled: true
  extraURLs: []

command:
- sh
- -c
- /scripts/runwithenvironment.sh /usr/share/nginx/html/assets/data nginx

# Add any additional volumes here
extraVolumes:
- name: as2gateway-key
  secret:
    secretName: disty-shared-as2gateway-key
- name: config-auth
  secret:
    secretName: disty-shared-config-auth
- name: config-blockchain
  secret:
    secretName: disty-shared-config-blockchain
- name: config-client
  secret:
    secretName: disty-shared-config-client
- name: config-db
  secret:
    secretName: disty-shared-config-db
- name: config-default
  secret:
    secretName: disty-shared-config-default
- name: config-integrations
  secret:
    secretName: disty-shared-config-integrations
- name: config-logger
  secret:
    secretName: disty-shared-config-logger
- name: config-sftp
  secret:
    secretName: disty-shared-config-sftp
- name: config-sqs
  secret:
    secretName: disty-shared-config-sqs

# Add any additional volume mounts here
extraVolumeMounts:
  default:
  - name: as2gateway-key
    mountPath: /etc/disty-shared/keys/as2gateway.key
    subPath: as2gateway.key
  - name: config-auth
    mountPath: /etc/disty-shared/config/auth.json
    subPath: auth.json
  - name: config-blockchain
    mountPath: /etc/disty-shared/config/blockchain.json
    subPath: blockchain.json
  - name: config-client
    mountPath: /etc/disty-shared/config/client.json
    subPath: client.json
  - name: config-db
    mountPath: /etc/disty-shared/config/db.json
    subPath: db.json
  - name: config-default
    mountPath: /etc/disty-shared/config/default.json
    subPath: default.json
  - name: config-integrations
    mountPath: /etc/disty-shared/config/integrations.json
    subPath: integrations.json
  - name: config-logger
    mountPath: /etc/disty-shared/config/logger.json
    subPath: logger.json
  - name: config-sftp
    mountPath: /etc/disty-shared/config/sftp.json
    subPath: sftp.json
  - name: config-sqs
    mountPath: /etc/disty-shared/config/sqs.json
    subPath: sqs.json
