# Global requirements
jxRequirements:
  envName: default
  ingress:
    domain: svc.cluster.local
    externalDNS: true
    namespaceSubDomain: .default.
    serviceType: ClusterIP
    tls:
      email: cicd@liquidx.com
      enabled: true
      production: true
      secretName: ""

# Horizontally scale the application
replicaCount: 1

# Modify metadata for different resources
metadata:
  deployment: {}
  service: {}
  ingress: {}

# Image configuration
image:
  repository: draft
  tag: dev
  pullPolicy: IfNotPresent
  imagePullSecrets:
  - name: tekton-container-registry-auth

# Define resources for the container
resources:
  default:
    limits:
      cpu: 2000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

# Provide custom env here
env:
  # Each field name should be the name of a container, mapped to an array of k8s Env objects
  default:
  - name: DD_AGENT_SERVICE_HOST
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: status.hostIP
  - name: DD_AGENT_SERVICE_PORT
    value: '8126'


# Configuration for the service resource
service:
  enabled: true
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http

# Config for the liveness probe
livenessProbe:
  httpGet:
    path: /healthz
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

# Config for the readiness probe
readinessProbe:
  httpGet:
    path: /healthz
    port: 8080
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

# Fill this section if deploying a custom certificate
tls:
  certificate:
    enabled: false
    issuerName: ""
    issuerKind: ""

# Config for ingress
ingress:
  enabled: true
  extraURLs: []

# Execution command
command:
- sh
- -c
- /bin/project/REPLACE_ME_APP_NAM

# Add any additional volumes here
extraVolumes: []

# Add any additional volume mounts here
extraVolumeMounts: {}
